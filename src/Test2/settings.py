"""
Django settings for Test2 project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

EMAIL_HOST ='smtp.gmail.com'
EMAIL_HOST_USER ='mutyabadennie@gmail.com'
EMAIL_HOST_PASSWORD = 'Beforedark7'
EMAIL_PORT = '587'
EMAIL_USE_TLS = True


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '04&p&m3s*!7%47ebq&31zlos51hrxk!k5bn0x%^^rbc2*(7j9n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'profiles',
    'contact',
    'stripe',
    'checkout',
    'crispy_forms',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'Test2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    
)

WSGI_APPLICATION = 'Test2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_in_env", "static_root")
    
   
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static_in_pro", "our_static"),
    #os.path.join(BASE_DIR, "static_in_env"),) 
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_in_env", "media_root")

SITE_ID = 1

CRISPY_TEMPLATE_PACK='bootstrap3'

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'




ACCOUNT_ACTIVATION_DAYS = 7
#this is the number of days users will have to activate their accounts 
#after registering. If a user does not activate within that period, the
#account will remain permanently inactive and may be deleted by maintenance
# scripts provided in django-registration-redux.

REGISTRATION_AUTO_LOGIN = True

ACCOUNT_AUTHENTICATION_METHOD ="username"  #"email" | #"username_email"
ACCOUNT_CONFIRM_EMAIL_ON_GET =False
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None

ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_EMAIL_REQUIRED =False
ACCOUNT_EMAIL_VERIFICATION = None
ACCOUNT_EMAIL_SUBJECT_PREFIX ="My subject "
ACCOUNT_DEFAULT_HTTP_PROTOCOL ="http"

ACCOUNT_LOGOUT_ON_GET =False
ACCOUNT_LOGOUT_REDIRECT_URL ="/"
ACCOUNT_SIGNUP_FORM_CLASS =None
ACCOUNT_SIGNUP_PASSWORD_VERIFICATION = True
ACCOUNT_UNIQUE_EMAIL =True
ACCOUNT_USER_MODEL_USERNAME_FIELD ="username"
ACCOUNT_USER_MODEL_EMAIL_FIELD ="email"

ACCOUNT_USERNAME_MIN_LENGTH = 5
ACCOUNT_USERNAME_REQUIRED =True
ACCOUNT_USERNAME_BLACKLIST = []
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE =False
ACCOUNT_PASSWORD_MIN_LENGTH = 6
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
  


#ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE (=False)
  
#ACCOUNT_LOGIN_ON_PASSWORD_RESET (=False)
 #ACCOUNT_ADAPTER (="allauth.account.adapter.DefaultAccountAdapter")
  #ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS (=True)
 # ACCOUNT_EMAIL_CONFIRMATION_HMAC (=True)
#ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN (=180)
#ACCOUNT_FORMS (={})
#ACCOUNT_LOGIN_ATTEMPTS_LIMIT (=5)
#ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT (=300)
#ACCOUNT_PRESERVE_USERNAME_CASING (=True)
#ACCOUNT_SESSION_REMEMBER (=None)
# ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE (=False)
 # ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE (=True)
#ACCOUNT_TEMPLATE_EXTENSION (="html")
#ACCOUNT_USER_DISPLAY (=a callable returning ``user.username``)
 #ACCOUNT_USERNAME_VALIDATORS (=None)
#SOCIALACCOUNT_ADAPTER (="allauth.socialaccount.adapter.DefaultSocialAccountAdapter")
  #SOCIALACCOUNT_AUTO_SIGNUP (=True)
 #SOCIALACCOUNT_EMAIL_VERIFICATION (=ACCOUNT_EMAIL_VERIFICATION)
#SOCIALACCOUNT_EMAIL_REQUIRED (=ACCOUNT_EMAIL_REQUIRED)
#SOCIALACCOUNT_FORMS (={})
#SOCIALACCOUNT_PROVIDERS (= dict)
# SOCIALACCOUNT_QUERY_EMAIL (=ACCOUNT_EMAIL_REQUIRED)
 #SOCIALACCOUNT_STORE_TOKENS (=True)

# stripe stuff

# test key
STRIPE_PUBLISHABLE_KEY ='pk_test_o0wZR1LxmBIyweWB3NxDQVA3'
STRIPE_SECRET_KEY ='sk_test_nC9gsvmlWstsD7JIM2SecZpx'

# live key
#STRIPE_PUBLISHABLE_KEY =''
#STRIPE_SECRETE_KEY =''





